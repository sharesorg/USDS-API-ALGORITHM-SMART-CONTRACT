# USDS-API-ALGORITHM-SMART-CONTRACT-
API Smart Contract Reactionary Algorithm for USDSHARES (USDS) Non-Volatile Stablecoin/Stabletoken
class USDSHARES
  attr_accessor :price, :supply, :demand

  def initialize
    @price = 1.0
    @supply = 0
    @demand = 0
  end

  def update_price(global_rates)
    btc_price = global_rates[:btc]
    bnb_price = global_rates[:bnb]
    eth_price = global_rates[:eth]
    tron_price = global_rates[:tron]
    matic_price = global_rates[:matic]
    cryptoshares_price = global_rates[:cryptoshares]

    price_change = calculate_price_change(btc_price, bnb_price, eth_price, tron_price, matic_price, cryptoshares_price)

    @price += price_change
    @price = [@price, 1.0].max
  end

  def calculate_price_change(*prices)
    total_price_change = 0

    prices.each do |price|
      total_price_change += (price * 0.01) if price
    end

    total_price_change * 99999
  end

  def update_demand(total_tokens)
    demand_change = total_tokens * 0.01

    @demand += demand_change
    @price += (@demand * 0.05)
  end
end
